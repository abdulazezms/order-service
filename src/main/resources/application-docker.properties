server.port=8100
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
eureka.client.service-url.defaultZone=http://eureka:password@discovery-server:8761/eureka
spring.datasource.username=aziz
spring.datasource.password=password
spring.datasource.url=jdbc:postgresql://postgres-orders:5431/order-service
spring.datasource.driver-class-name=org.postgresql.Driver
inventory-service.url.in-stock=/inventories

#Actuator configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
logging.level.org.springframework.web=DEBUG


#Resilience4J configuration
resilience4j.retry.instances.inventory.maxAttempts=3
resilience4j.retry.instances.inventory.waitDuration=2s
#Max waiting time for a service response to an API call.
resilience4j.timelimiter.instances.inventory.timeoutDuration=4s


#Tracing configuration
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:}, %X{traceId:-},%X{spanId:-}]


#Kafka properties
spring.kafka.bootstrap-servers=broker:29092
#Default topic if not specified
spring.kafka.template.default-topic=notification-topic
notification-topic=notification-topic

#info about how to serialize keys when sending data to brokers
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#info about how to serialize values (POJO)
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

